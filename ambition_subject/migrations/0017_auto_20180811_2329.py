# Generated by Django 2.1 on 2018-08-11 21:29


import sys

from django.db import migrations, models
from django.core.exceptions import ObjectDoesNotExist
from django.core.management.color import color_style

style = color_style()


def update_screening_datetime(apps, schema_editor):
    sys.stdout.write('\nUpdating screening_datetime on subject consent\n')
    SubjectScreening = apps.get_model('ambition_screening', 'subjectscreening')
    SubjectConsent = apps.get_model('ambition_subject', 'subjectconsent')
    for subject_consent in SubjectConsent.objects.filter(screening_datetime__isnull=True):
        try:
            subject_screening = SubjectScreening.objects.get(
                screening_identifier=subject_consent.screening_identifier)
        except ObjectDoesNotExist:
            sys.stdout.write(style.ERROR(
                f'  not found! screening_identifier='
                f'{subject_consent.screening_identifier}\n'))
        else:
            subject_consent.screening_datetime = subject_screening.screening_datetime
            subject_consent.save_base()
    sys.stdout.write('Done.\n')


class Migration(migrations.Migration):

    dependencies = [
        ('ambition_subject', '0016_auto_20180811_2328'),
        ('ambition_screening', '0002_auto_20180706_1519'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='subjectscreening',
            managers=['objects', models.manager.Manager()]),
        migrations.AlterModelManagers(
            name='subjectconsent',
            managers=['objects', models.manager.Manager()]),
        migrations.RunPython(update_screening_datetime),
    ]
